name: Build and publish
on:
  workflow_call: # called on version update detected
  workflow_dispatch: # can be manually dispatched under GitHub's "Actions" tab 
  push:
    branches:
      - 'main'
    paths:
      - 'config/**'
      - 'docker/**'
      - 'versions.mk'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
          - armhf
          - i386
          - ppc64el
          - riscv64
          - s390x
    steps:
      # Perform the checkout of the main branch
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        # with:
        #   platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build snap
        run: make snap-buildx SNAP_ARCH=${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: snaps
          path: snaps/radare2_*.snap
          if-no-files-found: error
          retention-days: 1
  
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker image
        run: make docker-buildx-push REGISTRY_IMAGE=${{ vars.DOCKERHUB_REPO }} SNAP_ARCH=${{ matrix.arch }}

      - name: Upload docker digest
        uses: actions/upload-artifact@v3
        with:
          name: docker-digests
          path: digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Lookup for snap file
        id: snap
        run: echo "file=$(find snaps -name \*.snap)" >> $GITHUB_OUTPUT

      - name: Publish snap
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
        with:
          snap: ${{ steps.snap.outputs.file }}
          release: stable

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      # Perform the checkout of the main branch
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: docker-digests
          path: digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Create manifest list and push
        run: make docker-push-multiarch REGISTRY_IMAGE=${{ vars.DOCKERHUB_REPO }} DOCKER_TAG=latest
    
      - name: Download SBOM
        run: docker scout sbom --format spdx --output sbom.spdx registry://${{ vars.DOCKERHUB_REPO }}@$(cat digests/amd64.iidfile)

      - name: Upload SBOM to GitHub dependency submission API
        uses: advanced-security/spdx-dependency-submission-action@v0.0.1
        with:
          filePath: sbom.spdx